// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`createSignedAddProviderPayload > returns the correct payload 1`] = `
{
  "endpoint": {
    "extrinsic": "createSponsoredAccountWithDelegation",
    "pallet": "msa",
  },
  "payload": {
    "authorizedMsaId": "1",
    "expiration": 100,
    "schemaIds": [
      8,
      9,
      10,
      15,
    ],
  },
  "signature": {
    "algo": "SECP256K1",
    "encodedValue": "fake-signature",
    "encoding": "base16",
  },
  "type": "addProvider",
}
`;

exports[`createSignedClaimHandlePayload > returns the correct payload 1`] = `
{
  "endpoint": {
    "extrinsic": "claimHandle",
    "pallet": "handles",
  },
  "payload": {
    "baseHandle": "Alice",
    "expiration": 100,
  },
  "signature": {
    "algo": "SECP256K1",
    "encodedValue": "fake-signature",
    "encoding": "base16",
  },
  "type": "claimHandle",
}
`;

exports[`createSignedGraphKeyPayload > returns the correct payload 1`] = `
{
  "endpoint": {
    "extrinsic": "applyItemActionsWithSignatureV2",
    "pallet": "statefulStorage",
  },
  "payload": {
    "actions": [
      {
        "payloadHex": "0x40a6836ea489047852d3f0297f8fe8ad6779793af4e9c6274c230c207b9b825026",
        "type": "addItem",
      },
    ],
    "expiration": 100,
    "schemaId": 7,
    "targetHash": 0,
  },
  "signature": {
    "algo": "SECP256K1",
    "encodedValue": "fake-signature-for-graph",
    "encoding": "base16",
  },
  "type": "itemActions",
}
`;

exports[`createSignedLogInPayload > returns the correct payload 1`] = `
{
  "credentials": [],
  "payload": {
    "message": "your-app.com wants you to sign in with your Frequency account:
    frequency:123:0xf24FF3a9CF04c71Dbc94D0b566f7A27B94566cac
    
    {{#showStatement}}{{statement}}
    
    
    {{/showStatement}}URI: https://your-app.com/signin/callback
    Version: 1
    Nonce: N6rLwqyz34oUxJEXJ
    Chain ID: frequency:undefined
    Issued At: 2024-10-29T19:17:27.077Z
  ",
  },
  "signature": {
    "algo": "SECP256K1",
    "encodedValue": "fake-signature-for-graph",
    "encoding": "base16",
  },
  "type": "login",
  "userPublicKey": {
    "encodedValue": "0xf24FF3a9CF04c71Dbc94D0b566f7A27B94566cac",
    "encoding": "base16",
    "format": "eip-55",
    "type": "Secp256k1",
  },
}
`;
